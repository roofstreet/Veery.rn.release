// Generated by Apple Swift version 4.2.1 effective-4.1.50 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import CoreData;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Veery",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS("_TtC5Veery8NextTrip")
@interface NextTrip : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;

@interface NextTrip (SWIFT_EXTENSION(Veery))
@property (nonatomic, copy) NSString * _Nullable arrival_name;
@property (nonatomic, copy) NSDate * _Nullable arrival_time;
@property (nonatomic, copy) NSString * _Nullable destination_json;
@property (nonatomic, strong) NSNumber * _Nullable destination_lat;
@property (nonatomic, strong) NSNumber * _Nullable destination_lon;
@property (nonatomic, strong) NSNumber * _Nullable duration;
@property (nonatomic, strong) NSNumber * _Nullable ok;
@property (nonatomic, strong) NSNumber * _Nullable prediction_id;
@property (nonatomic, strong) NSNumber * _Nullable probability;
@property (nonatomic, copy) NSString * _Nullable route_json;
@property (nonatomic, copy) NSString * _Nullable start_name;
@property (nonatomic, copy) NSDate * _Nullable start_time;
@end


SWIFT_CLASS("_TtC5Veery4Tags")
@interface Tags : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface Tags (SWIFT_EXTENSION(Veery))
@property (nonatomic, strong) NSNumber * _Nullable tag_id;
@property (nonatomic, copy) NSString * _Nullable key;
@property (nonatomic, copy) NSString * _Nullable value;
@property (nonatomic, strong) NSNumber * _Nullable sent;
@property (nonatomic, strong) NSNumber * _Nullable valid;
@property (nonatomic, strong) NSNumber * _Nullable version;
@end

@class CLLocation;
@class LocationsHistory;
@class Predictions;
@class NSDictionary;
@class Pois;
@class OptinView;
@class OptinImage;
@class OptinText;
@class OptinButton;
@class UIButton;

SWIFT_CLASS("_TtC5Veery5Veery")
@interface Veery : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull backgroundSessionID;)
+ (NSString * _Nonnull)backgroundSessionID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull NOTIF_HELLO;)
+ (NSString * _Nonnull)NOTIF_HELLO SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull NOTIF_ROUTEMATCH;)
+ (NSString * _Nonnull)NOTIF_ROUTEMATCH SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull NOTIF_POI;)
+ (NSString * _Nonnull)NOTIF_POI SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull NOTIF_PREDICTION;)
+ (NSString * _Nonnull)NOTIF_PREDICTION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger HISTORY_RAW;)
+ (NSInteger)HISTORY_RAW SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger HISTORY_ROUTEMATCH;)
+ (NSInteger)HISTORY_ROUTEMATCH SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull GEOJSON_LINESTRING;)
+ (NSString * _Nonnull)GEOJSON_LINESTRING SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull GEOJSON_MULTIPOINT;)
+ (NSString * _Nonnull)GEOJSON_MULTIPOINT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger DEACTIVATE_ALL;)
+ (NSInteger)DEACTIVATE_ALL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger FOREGROUND_GEOLOC;)
+ (NSInteger)FOREGROUND_GEOLOC SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger BACKGROUND_GEOLOC;)
+ (NSInteger)BACKGROUND_GEOLOC SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger COLLECT;)
+ (NSInteger)COLLECT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger ROUTE_MATCH;)
+ (NSInteger)ROUTE_MATCH SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger POINT_OF_INTEREST;)
+ (NSInteger)POINT_OF_INTEREST SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger PREDICTION;)
+ (NSInteger)PREDICTION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger FOREGROUND SWIFT_DEPRECATED;)
+ (NSInteger)FOREGROUND SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger BACKGROUND SWIFT_DEPRECATED;)
+ (NSInteger)BACKGROUND SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger BACKEND SWIFT_DEPRECATED;)
+ (NSInteger)BACKEND SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger GEOPROFILE SWIFT_DEPRECATED;)
+ (NSInteger)GEOPROFILE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger USER_AUTH_GEOLOC;)
+ (NSInteger)USER_AUTH_GEOLOC SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger USER_AUTH_GEOLOC_BACKGROUND;)
+ (NSInteger)USER_AUTH_GEOLOC_BACKGROUND SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger USER_AUTH_NOTIFICATION;)
+ (NSInteger)USER_AUTH_NOTIFICATION SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)serviceConnect;
- (void)stopLocationUpdate;
- (void)requestLocationUpdate;
///
/// returns:
/// CLLocation?
- (CLLocation * _Nullable)getCurrentLocation SWIFT_WARN_UNUSED_RESULT;
- (BOOL)handleEventsForBackgroundURLSessionWithIdentifier:(NSString * _Nonnull)identifier completionHandler:(void (^ _Nonnull)(void))completionHandler SWIFT_WARN_UNUSED_RESULT;
- (void)setAPNSTokenWithToken:(NSData * _Nonnull)token prod:(BOOL)prod;
- (void)setAPNSTokenWithToken:(NSData * _Nonnull)token;
- (BOOL)apnsMessageHandler:(NSDictionary * _Nonnull)userInfo SWIFT_WARN_UNUSED_RESULT;
/// Set your <em>Secret API KEY</em>
- (void)setApiKeySecret:(NSString * _Nonnull)secretapikey;
- (void)registerNotification:(NSString * _Nonnull)subscriptionType :(NSString * _Nonnull)notificationFormat;
- (void)unregisterNotification:(NSString * _Nonnull)subscriptionType;
- (void)setTagsWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value;
- (void)unsetTagsWithName:(NSString * _Nonnull)name;
- (NSString * _Nullable)getTagsWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
/// <em>veery.activate()</em> : Request the Location Authorization
- (void)activateWithService:(NSInteger)service;
/// <h2>PS :</h2>
/// since should be before until (since < until)
/// \param format is an Int. should be Veery.<em>VEERY_FORMAT_RAW</em> or Veery.<em>VEERY_FORMAT_EXTRAPOLATED</em>
///
/// \param since is a Date?
///
/// \param until is a Date?
///
///
/// returns:
/// LocationsHistory?
- (LocationsHistory * _Nullable)getLocationHistory:(NSInteger)format :(NSDate * _Nullable)since :(NSDate * _Nullable)until SWIFT_WARN_UNUSED_RESULT;
- (Predictions * _Nullable)getNextTrip SWIFT_WARN_UNUSED_RESULT;
+ (CLLocationCoordinate2D)locationWithBearingWithBearing:(double)bearing distanceMeters:(double)distanceMeters origin:(CLLocationCoordinate2D)origin SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSValue *> * _Nullable)getBoundingBoxWithData:(NSData * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSValue *> * _Nullable)getBoundingBoxWithGeojson:(NSDictionary * _Nonnull)geojson SWIFT_WARN_UNUSED_RESULT;
+ (CLLocationCoordinate2D)getFirstCoordinatesWithGeojson:(NSDictionary * _Nonnull)geojson SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSValue *> * _Nullable)getBoundingBoxWithLoc:(CLLocation * _Nonnull)loc SWIFT_WARN_UNUSED_RESULT;
- (void)resetLocalHistory;
- (void)resetBackendHistory;
- (void)resetGeoProfileHistory;
- (void)requestRouteMatch;
- (void)stopRouteMatch;
- (void)requestPredictionUpdate;
- (void)stopPredictionUpdate;
- (Pois * _Nonnull)getPois SWIFT_WARN_UNUSED_RESULT;
- (void)getAlllocationTodebug;
- (void)requestPoiUpdate;
- (void)stopPoiUpdate;
- (NSString * _Nonnull)getStatus SWIFT_WARN_UNUSED_RESULT;
- (BOOL)systemAuthorization:(NSInteger)autho SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)userAgreement SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)userAgreementAge SWIFT_WARN_UNUSED_RESULT;
- (void)userAgreedPurposeWithPurposeVersion:(NSInteger)PurposeVersion PurposeText:(NSString * _Nonnull)PurposeText ApprovalButtonText:(NSString * _Nonnull)ApprovalButtonText RejectionButtonText:(NSString * _Nonnull)RejectionButtonText Agreed:(BOOL)Agreed;
- (void)activateWithOptinWithActivate:(NSInteger)activate version:(NSInteger)version optinView:(OptinView * _Nullable)optinView optinImage:(OptinImage * _Nonnull)optinImage optinText:(OptinText * _Nonnull)optinText optinButtonOK:(OptinButton * _Nonnull)optinButtonOK optinButtonNO:(OptinButton * _Nonnull)optinButtonNO NbProposal:(NSInteger)NbProposal proposalCycle:(NSInteger)proposalCycle;
- (void)acceptWithSender:(UIButton * _Nonnull)sender;
- (void)refuseWithSender:(UIButton * _Nonnull)sender;
@end


SWIFT_CLASS("_TtCC5Veery5Veery16LocationsHistory")
@interface LocationsHistory : NSObject
- (NSInteger)count SWIFT_WARN_UNUSED_RESULT;
- (NSArray<CLLocation *> * _Nonnull)toArray SWIFT_WARN_UNUSED_RESULT;
- (CLLocationCoordinate2D)getFirstLocation SWIFT_WARN_UNUSED_RESULT;
/// \param geometry String must be “LineString, MultiPoint”
/// this method called for get Location history in format RAW
/// builte the GeoJSON Object according to the geometry
///
///
/// returns:
/// Data? (GeoJson Object or nil)
- (NSData * _Nullable)toGeoJSONWithGeometry:(NSString * _Nonnull)geometry SWIFT_WARN_UNUSED_RESULT;
/// this method called for get Location history in format EXTRAPOLATED
/// get past trips
///
/// returns:
/// [Data] (Array of GeoJson Object or [])
- (NSArray<NSData *> * _Nonnull)toGeoJSON SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSData *> * _Nonnull)toGeoJSONArray SWIFT_WARN_UNUSED_RESULT;
/// this method allow to you to get the  LatLng northeast  and the LatLng southwest for center your GeoJson object in your map
///
/// returns:
/// [CLLocationCoordinate2D]?
- (NSArray<NSValue *> * _Nullable)getBoundingBox SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtCC5Veery5Veery11Predictions")
@interface Predictions : NSObject
- (NSArray<CLLocation *> * _Nullable)toLocations SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isOk SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isOutdated SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSValue *> * _Nullable)toLocationCoordinate2D SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary * _Nullable)toGeoJson SWIFT_WARN_UNUSED_RESULT;
- (CLLocationCoordinate2D)getStartTrip SWIFT_WARN_UNUSED_RESULT;
- (CLLocation * _Nullable)getNextDestination SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nullable)getStartTime SWIFT_WARN_UNUSED_RESULT;
/// Get the estimate <em>Arrival</em> time to your next <em>Destination</em>
- (NSDate * _Nullable)getArrivalTime SWIFT_WARN_UNUSED_RESULT;
- (double)getProbability SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStartName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getArrivalName SWIFT_WARN_UNUSED_RESULT;
- (double)getDuration SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtCC5Veery5Veery4Pois")
@interface Pois : NSObject
- (NSArray<NSData *> * _Nonnull)toGeoJSONArray SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)count SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSValue *> * _Nonnull)toArray SWIFT_WARN_UNUSED_RESULT;
- (double)getWeightWithIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtCC5Veery5Veery9OptinView")
@interface OptinView : NSObject
@property (nonatomic) float x;
@property (nonatomic) float y;
@property (nonatomic) NSInteger height;
@property (nonatomic) NSInteger width;
@property (nonatomic, copy) NSString * _Nonnull backgroundColor;
@property (nonatomic) NSInteger cornerRadius;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtCC5Veery5Veery10OptinImage")
@interface OptinImage : NSObject
@property (nonatomic) float x;
@property (nonatomic) float y;
@property (nonatomic) NSInteger height;
@property (nonatomic) NSInteger width;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) NSInteger bottomMargin;
@property (nonatomic) NSInteger topMargin;
@property (nonatomic) NSInteger rightMargin;
@property (nonatomic) NSInteger leftMargin;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtCC5Veery5Veery9OptinText")
@interface OptinText : NSObject
@property (nonatomic) float x;
@property (nonatomic) float y;
@property (nonatomic) NSInteger height;
@property (nonatomic) NSInteger width;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic) NSInteger bottomMargin;
@property (nonatomic) NSInteger topMargin;
@property (nonatomic) NSInteger rightMargin;
@property (nonatomic) NSInteger leftMargin;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtCC5Veery5Veery11OptinButton")
@interface OptinButton : NSObject
@property (nonatomic, copy) NSString * _Nonnull color;
@property (nonatomic, copy) NSString * _Nonnull textColor;
@property (nonatomic) NSInteger height;
@property (nonatomic) NSInteger width;
@property (nonatomic, copy) NSString * _Nonnull text;
@property (nonatomic) NSInteger bottomMargin;
@property (nonatomic) NSInteger topMargin;
@property (nonatomic) NSInteger rightMargin;
@property (nonatomic) NSInteger leftMargin;
@property (nonatomic) NSInteger cornerRadius;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP5Veery13VeeryDelegate_")
@protocol VeeryDelegate
@optional
- (void)veeryDidReceiveNewLocations:(Veery * _Nonnull)veery newLocations:(NSArray<CLLocation *> * _Nonnull)newLocations;
- (void)veeryRouteMatch:(Veery * _Nonnull)veery locationsHistory:(LocationsHistory * _Nonnull)locationsHistory;
- (void)veeryPredictionUpdate:(Veery * _Nonnull)veery Predictions:(Predictions * _Nonnull)Predictions;
- (void)veeryPoiUpdate:(Veery * _Nonnull)veery poi:(Pois * _Nonnull)poi;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
